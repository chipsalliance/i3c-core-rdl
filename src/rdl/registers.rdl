// SPDX-License-Identifier: Apache-2.0
// I3C controller register map based on MIPI HCI 1.2

`include "base_registers.rdl"
`include "pio_registers.rdl"
`include "DAT_structure.rdl"
`include "DCT_structure.rdl"

addrmap I3CCSR #(
    bit PIO_offset = 0x100,
    bit DAT_offset = 0x400,
    bit DCT_offset = 0x800
){
    BaseRegs #(
        .PIO_offset(PIO_offset),
        // TODO: verify that DMA is not supported
        .DMA_support(false),
        .Ring_offset(16'h0),
        // TODO: verify that EXT is not supported
        .Ext_offset(16'h0),
        // TODO: verify that Little-endian is used
        // Change if Big-endian is preferred
        .Data_endianness(1'b0),
        // TODO: Update to correct values after implementation is done
        .AUTOCMD_separated_reporting_dyanmic(false),
        .AUTOCMD_separated_reporting_support(1'b0),
        .DEV_ctx_SG_suport(false),
        .DEV_IBI_SG_support(false),
        .DEV_CR_SG_support(false),
        .Scheduled_commands_support(false),
        .IBI_creadit_count_support(false),
        .IBI_data_abort_support(false),
        .HDR_TS_support(false),
        .HDR_DDR_support(false),
        .Handoff_support(false),
        .IBI_auto_command_suport(false),
        .Combo_command_support(false),
        .MIPI_commands(15'h0035),
        // TODO ends here
        .DAT_entry_size(4'h0),
        .DAT_table_size(7'h7f),
        .DAT_offset(DAT_offset),
        .DCT_entry_size(4'h0),
        .DCT_table_size(7'h7f),
        .DCT_offset(DCT_offset)
    ) I3CBase @ 0x0;
    PIORegs PIOControl @ PIO_offset;
    mem {
        mementries = 128;
        memwidth = 64;
        sw = rw;
        DAT_structure DAT_MEMORY [128];
    } external DAT @ DAT_offset;
    mem {
        mementries = 128;
        memwidth = 128;
        sw = rw;
        DCT_structure DCT_MEMORY [128];
    } external DCT @ DCT_offset;
};
